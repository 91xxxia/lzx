<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.ClinicalSys.mapper.ExpensesMapper">
    
    <resultMap type="Expenses" id="ExpensesResult">
        <result property="expenseId"    column="expense_id"    />
        <result property="patientId"    column="patient_id"    />
        <result property="expenseType"    column="expense_type"    />
        <result property="amount"    column="amount"    />
    </resultMap>

    <sql id="selectExpensesVo">
        select expense_id, patient_id, expense_type, amount from expenses
    </sql>

    <select id="selectExpensesList" parameterType="Expenses" resultMap="ExpensesResult">
        <include refid="selectExpensesVo"/>
        <where>  
            <if test="patientId != null  and patientId != ''"> and patient_id = #{patientId}</if>
        </where>
    </select>
    
    <select id="selectExpensesByExpenseId" parameterType="Long" resultMap="ExpensesResult">
        <include refid="selectExpensesVo"/>
        where expense_id = #{expenseId}
    </select>

    <insert id="insertExpenses" parameterType="Expenses" useGeneratedKeys="true" keyProperty="expenseId">
        insert into expenses
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="patientId != null and patientId != ''">patient_id,</if>
            <if test="expenseType != null">expense_type,</if>
            <if test="amount != null">amount,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="patientId != null and patientId != ''">#{patientId},</if>
            <if test="expenseType != null">#{expenseType},</if>
            <if test="amount != null">#{amount},</if>
         </trim>
    </insert>

    <update id="updateExpenses" parameterType="Expenses">
        update expenses
        <trim prefix="SET" suffixOverrides=",">
            <if test="patientId != null and patientId != ''">patient_id = #{patientId},</if>
            <if test="expenseType != null">expense_type = #{expenseType},</if>
            <if test="amount != null">amount = #{amount},</if>
        </trim>
        where expense_id = #{expenseId}
    </update>

    <delete id="deleteExpensesByExpenseId" parameterType="Long">
        delete from expenses where expense_id = #{expenseId}
    </delete>

    <delete id="deleteExpensesByExpenseIds" parameterType="String">
        delete from expenses where expense_id in 
        <foreach item="expenseId" collection="array" open="(" separator="," close=")">
            #{expenseId}
        </foreach>
    </delete>
</mapper>